# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ FOLIO-2913 ]

jobs:
  set-up:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.REF }}
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - run: echo "Okapi URL is $okapiUrl"
      env:
        okapiUrl: https://folio-snapshot-stable-okapi.dev.folio.org
    - run: echo "FOLIO registry is $folioRegistry"
      env:
        folioRegistry:  https://repository.folio.org/repository/maven-snapshots/
    - run: mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout
    - run: mvn help:evaluate -Dexpression=project.version -q -DforceStdout
    # - run: git tag -l --points-at HEAD
    - run: echo "project name is ${{ github.REPOSITORY }}"
    - run: git rev-parse HEAD
    - run: git config remote.origin.url

  RAML-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.REF }}
      - run: echo "Assesing RAML and running raml-cop..."
      - run: mkdir -p ci
      - run: echo "<html><body><pre>" > ci/lintRamlCop.html
      - run: python --version
      - run: python3 /usr/local/bin/lint_raml_cop.py -l info --validate-only >> ci/lintRamlCop.html
      - run: echo "</pre><body></html>" >> ci/lintRamlCop.html
      - run: rm -rf ci
   